# This is workflow for staging

name: Deploy Lightsail CI/CD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the staging branch
on:
  pull_request:
    branches: [staging]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      #- name: Install dependencies
      #  run: npm ci

      #- name: Run Lint
      #  run: npm run lint

      #- name: Run Unit-Tests
      #  run: npm run test:ci

      #- name: Run Build
      #  run: npm run build:staging
      
      - name: Deploy with rsync
        uses: trendyminds/github-actions-rsync@master
        with:
          RSYNC_OPTIONS: -avzr --delete-after --exclude node_modules --exclude '.git*'
          RSYNC_TARGET: ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/data-disk/Website/stage
          RSYNC_SOURCE: ./dist/crossfitamsee
        env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
          SSH_USERNAME: ${{secrets.SSH_USER}}
          SSH_HOSTNAME: ${{secrets.SSH_HOST}}

      #- name: Deploy with rsync
      #  run: rsync -avu --delete-after ./dist/crossfitamsee ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/data-disk/Website/stage
